{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610ma3/cs5610ma3/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Create a state for tracking the clicked boxes (4 boxes, so an array of 4 booleans)\n  const [clickedBoxes, setClickedBoxes] = useState([false, false, false, false]);\n\n  // Function to handle box click and toggle the background color and update the count\n  const handleBoxClick = index => {\n    // Toggle the clicked state of the clicked box\n    const newClickedBoxes = [...clickedBoxes];\n    newClickedBoxes[index] = !newClickedBoxes[index];\n\n    // Set the new state for clicked boxes\n    setClickedBoxes(newClickedBoxes);\n\n    // Update the count based on how many boxes are clicked\n    const newCount = newClickedBoxes.filter(Boolean).length; // Count how many `true` values there are\n    setCount(newCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"2x2box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CS5610 Mini Assignment 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"React and JavaScript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\",\n          fontFamily: \"Georgia\"\n        },\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridTemplateRows: \"1fr 1fr\",\n        width: \"200px\",\n        height: \"200px\",\n        margin: \"auto\"\n      },\n      children: [\"1\", \"2\", \"3\", \"4\"].map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleBoxClick(index) // Pass the index to handleBoxClick\n        ,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          border: \"1px solid gray\",\n          backgroundColor: clickedBoxes[index] ? \"black\" : \"\",\n          // Change color based on clicked state\n          color: clickedBoxes[index] ? \"white\" : \"black\" // Adjust text color for visibility\n        },\n        children: number\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hPckxRCq2FlcmaylisWCGJS4KOc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","count","setCount","clickedBoxes","setClickedBoxes","handleBoxClick","index","newClickedBoxes","newCount","filter","Boolean","length","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","fontFamily","display","gridTemplateColumns","gridTemplateRows","width","height","margin","map","number","onClick","alignItems","justifyContent","border","backgroundColor","color","_c","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610ma3/cs5610ma3/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from \"react\";\n\nfunction App() {\n    const [count, setCount] = useState(0);\n\n    // Create a state for tracking the clicked boxes (4 boxes, so an array of 4 booleans)\n    const [clickedBoxes, setClickedBoxes] = useState([false, false, false, false]);\n\n    // Function to handle box click and toggle the background color and update the count\n    const handleBoxClick = (index) => {\n        // Toggle the clicked state of the clicked box\n        const newClickedBoxes = [...clickedBoxes];\n        newClickedBoxes[index] = !newClickedBoxes[index];\n\n        // Set the new state for clicked boxes\n        setClickedBoxes(newClickedBoxes);\n\n        // Update the count based on how many boxes are clicked\n        const newCount = newClickedBoxes.filter(Boolean).length;  // Count how many `true` values there are\n        setCount(newCount);\n    };\n\n    return (\n        <div className=\"2x2box\">\n            <div style={{ textAlign: \"center\" }}>\n                <h1>CS5610 Mini Assignment 3</h1>\n                <h5>React and JavaScript</h5>\n                <p style={{ fontSize: 30, fontWeight: \"bold\", fontFamily: \"Georgia\" }}>Count: {count}</p>\n            </div>\n\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr 1fr\",\n                    gridTemplateRows: \"1fr 1fr\",\n                    width: \"200px\",\n                    height: \"200px\",\n                    margin: \"auto\",\n                }}\n            >\n                {[\"1\", \"2\", \"3\", \"4\"].map((number, index) => (\n                    <div\n                        key={index}\n                        onClick={() => handleBoxClick(index)}  // Pass the index to handleBoxClick\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            border: \"1px solid gray\",\n                            backgroundColor: clickedBoxes[index] ? \"black\" : \"\", // Change color based on clicked state\n                            color: clickedBoxes[index] ? \"white\" : \"black\", // Adjust text color for visibility\n                        }}\n                    >\n                        {number}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}