{"ast":null,"code":"var _jsxFileName = \"/Users/dereklaister/Desktop/CS5610ma3/src/CountContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountContextHook = /*#__PURE__*/createContext();\n\n// provider\nexport function CountProvider({\n  children\n}) {\n  _s();\n  const [count, setCount] = useState(0);\n  const [clickedBoxes, setClickedBoxes] = useState([false, false, false, false]);\n  const onClick = event => {\n    const newClickedBoxes = [...clickedBoxes];\n    newClickedBoxes[event] = !newClickedBoxes[event];\n    setClickedBoxes(newClickedBoxes);\n    const newCount = newClickedBoxes.filter(Boolean).length; // Count how many `true` values there are\n    setCount(newCount);\n  };\n  return /*#__PURE__*/_jsxDEV(CountContextHook.Provider, {\n    value: {\n      count,\n      clickedBoxes,\n      onClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n// hook\n_s(CountProvider, \"hPckxRCq2FlcmaylisWCGJS4KOc=\");\n_c = CountProvider;\nexport const useCountHook = () => {\n  _s2();\n  return useContext(CountContextHook);\n};\n_s2(useCountHook, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CountProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CountContextHook","CountProvider","children","_s","count","setCount","clickedBoxes","setClickedBoxes","onClick","event","newClickedBoxes","newCount","filter","Boolean","length","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCountHook","_s2","$RefreshReg$"],"sources":["/Users/dereklaister/Desktop/CS5610ma3/src/CountContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// context\nconst CountContextHook = createContext();\n\n// provider\nexport function CountProvider({ children }) {\n    const [count, setCount] = useState(0);\n    const [clickedBoxes, setClickedBoxes] = useState([false, false, false, false]);\n\n    const onClick = (event) => {\n        const newClickedBoxes = [...clickedBoxes];\n        newClickedBoxes[event] = !newClickedBoxes[event];\n\n        setClickedBoxes(newClickedBoxes);\n\n        const newCount = newClickedBoxes.filter(Boolean).length;  // Count how many `true` values there are\n        setCount(newCount);\n    };\n\n    return (\n        <CountContextHook.Provider value={{ count, clickedBoxes, onClick }}>\n            {children}\n        </CountContextHook.Provider>\n    );\n}\n\n// hook\nexport const useCountHook = () => useContext(CountContextHook);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;;AAExC;AACA,OAAO,SAASM,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EAE9E,MAAMY,OAAO,GAAIC,KAAK,IAAK;IACvB,MAAMC,eAAe,GAAG,CAAC,GAAGJ,YAAY,CAAC;IACzCI,eAAe,CAACD,KAAK,CAAC,GAAG,CAACC,eAAe,CAACD,KAAK,CAAC;IAEhDF,eAAe,CAACG,eAAe,CAAC;IAEhC,MAAMC,QAAQ,GAAGD,eAAe,CAACE,MAAM,CAACC,OAAO,CAAC,CAACC,MAAM,CAAC,CAAE;IAC1DT,QAAQ,CAACM,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIZ,OAAA,CAACC,gBAAgB,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEE,YAAY;MAAEE;IAAQ,CAAE;IAAAN,QAAA,EAC9DA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEpC;;AAEA;AAAAjB,EAAA,CArBgBF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAsB7B,OAAO,MAAMqB,YAAY,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACG,gBAAgB,CAAC;AAAA;AAACuB,GAAA,CAAlDD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}